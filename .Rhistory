conn <- dbConnect(drv = PostgreSQL(),
dbname = "sdad",
host = "10.250.124.195",
port = 5432,
user = Sys.getenv("db_userid"),
password = Sys.getenv("db_pwd"))
# load packages
for (pkg in c("tidyverse", "data.table", "R.utils", "RPostgreSQL",
"cowplot", "maditr", "lubridate", "countrycode")) {library(pkg, character.only = TRUE)}
conn <- dbConnect(drv = PostgreSQL(),
dbname = "sdad",
host = "10.250.124.195",
port = 5432,
user = Sys.getenv("db_userid"),
password = Sys.getenv("db_pwd"))
descriptives <- dbGetQuery(conn, "SELECT * FROM gh_cost.ctry_desc_2019")
dbDisconnect(conn)
descriptives %>%
mutate(repo_share = round(repos / sum(descriptives$repos) * 100),
commits_share = round(commits / sum(descriptives$commits) * 100),
adds_share = round(additions / sum(descriptives$additions) * 100))
descriptives %>%
slice(1:10)
descriptives %>%
drop_na(country) %>%
slice(1:10)
descriptives %>%
drop_na(country) %>%
slice(1:10) %>%
mutate(repo_share = round(repos / sum(descriptives$repos) * 100),
commits_share = round(commits / sum(descriptives$commits) * 100),
adds_share = round(additions / sum(descriptives$additions) * 100))
tmp <- descriptives %>%
drop_na(country) %>%
slice(1:10) %>%
mutate(repo_share = round(repos / sum(descriptives$repos) * 100),
commits_share = round(commits / sum(descriptives$commits) * 100),
adds_share = round(additions / sum(descriptives$additions) * 100))
tmp
all <- descriptives %>%
mutate(repo_share = round(repos / sum(descriptives$repos) * 100),
commits_share = round(commits / sum(descriptives$commits) * 100),
adds_share = round(additions / sum(descriptives$additions) * 100))
all
sum(tmp$repos) / sum(all$repos)
top10 <- descriptives %>%
drop_na(country) %>%
slice(1:10)
all <- descriptives
top10 <- descriptives %>%
drop_na(country) %>%
slice(1:10)
all <- descriptives
sum(tmp$repos) / sum(all$repos)
sum(tmp$commits) / sum(all$commits)
sum(tmp$additions) / sum(all$additions)
top10
sum(tmp$repos)
sum(tmp$commits)
sum(tmp$additions)
sum(tmp$additions)
tmp$additions
all$additions
sum(all$additions)
tmp$additions
17607678710/160349103659
3646588106/160349103659
5805146124/160349103659
3029142339/160349103659
1885865626/160349103659
2185701244/160349103659
1337478834/160349103659
2849167615/160349103659
1269916770/160349103659
2788982654/160349103659
all
library(RPostgreSQL)
library(tidyverse)
library(tidytable)
library(data.table)
library(countrycode)
conn <- dbConnect(drv = PostgreSQL(),
dbname = "sdad",
host = "10.250.124.195",
port = 5432,
user = Sys.getenv("db_userid"),
password = Sys.getenv("db_pwd"))
#counts_by_year <- dbGetQuery(conn, "SELECT * FROM gh_cost.cost_by_year_0919_dd WHERE YEAR = 2019;")
counts_by_year <- dbGetQuery(conn, "SELECT * FROM gh_cost.cost_by_year_0919_dd_nmrc_jbsc WHERE YEAR = 2019;")
# disconnect from postgresql database
dbDisconnect(conn)
counts_by_year <- as.data.table(counts_by_year)
#COST BASED ON Additions
counts_by_year[,adds_wo_gross := round(22094.19 * 2.5 * (2.4 * (additions/1000)^1.05)^0.38,2)]
counts_by_year[,adds_w_gross := round(27797.24 * 2.5 * (2.4 * (additions/1000)^1.05)^0.38,2)]
#COST BASED ON Additions + Deletions
counts_by_year[,sum_wo_gross := round(22094.19 * 2.5 * (2.4 * (sum_adds_dels/1000)^1.05)^0.38,2)]
counts_by_year[,sum_w_gross := round(27797.24 * 2.5 * (2.4 * (sum_adds_dels/1000)^1.05)^0.38,2)]
#COST BASED ON Additions - Deletions
counts_by_year[,net_wo_gross := round(22094.19 * 2.5 * (2.4 * (net_adds_dels/1000)^1.05)^0.38,2)]
counts_by_year[,net_w_gross := round(27797.24 * 2.5 * (2.4 * (net_adds_dels/1000)^1.05)^0.38,2)]
conn <- dbConnect(drv = PostgreSQL(),
dbname = "sdad",
host = "10.250.124.195",
port = 5432,
user = Sys.getenv("db_userid"),
password = Sys.getenv("db_pwd"))
#counts_by_country <- dbGetQuery(conn, "SELECT * FROM gh_cost.cost_by_country_annual_0919_dd WHERE YEAR = 2019;")
counts_by_country <- dbGetQuery(conn, "SELECT * FROM gh_cost.cost_by_country_annual_0919_dd_nmrc_jbsc_0821 WHERE YEAR = 2019;")
# disconnect from postgresql database
dbDisconnect(conn)
counts_by_country[grepl("\\|", counts_by_country$country), "country"] <- "multiple"
table(counts_by_country$country)
# joints sector info and the cost estimates at repo level
repos_geo_joined <- counts_by_country %>%
select(-year) %>%
rename.(geo_commits = commits,
geo_additions = additions,
geo_deltions = deletions,
geo_sum = sum_adds_dels,
geo_net = net_adds_dels) %>%
left_join.(counts_by_year, by = "slug") %>%
select.(slug, country, year, everything())
# calculates the cost for sectors additions
repos_geo_joined <- repos_geo_joined %>%
rename.(repo_additions = additions,
repo_deletions = deletions) %>%
mutate.(geo_fraction = round(geo_additions / repo_additions, 3),
geo_cost_wo_gross = geo_fraction * adds_wo_gross,
geo_cost_w_gross = geo_fraction * adds_w_gross) %>%
arrange.(slug, country, geo_fraction)
repos_geo_joined$geo_cost_wo_gross[is.nan(repos_geo_joined$geo_cost_wo_gross)] <- 0
repos_geo_joined$geo_cost_w_gross[is.nan(repos_geo_joined$geo_cost_w_gross)] <- 0
costs_by_country <- repos_geo_joined %>%
group_by(country) %>%
summarize(geo_adds_wo_gross = sum(geo_cost_wo_gross),
geo_adds_w_gross = sum(geo_cost_w_gross)) %>%
arrange(-geo_adds_wo_gross); costs_by_country
costs_by_country_adj <- costs_by_country %>%
mutate(geo_binary = "Other Countries") %>%
mutate(country = replace_na(country, "missing")) %>%
mutate(geo_binary = ifelse(country == "missing", "Missing",
ifelse(country == "united states", "United States", geo_binary))) %>%
group_by(geo_binary) %>%
summarize(geo_adds_wo_gross = sum(geo_adds_wo_gross),
geo_adds_w_gross = sum(geo_adds_w_gross))
costs_by_country_adj <- costs_by_country %>%
mutate(geo_binary = "Other Countries") %>%
mutate(country = replace_na(country, "missing")) %>%
mutate(geo_binary = ifelse(country == "missing", "Missing",
ifelse(country == "united states", "United States", geo_binary))) %>%
group_by(geo_binary) %>%
summarize(geo_adds_wo_gross = sum(geo_adds_wo_gross),
geo_adds_w_gross = sum(geo_adds_w_gross)) %>%
add_row(geo_binary = "Totals",
geo_adds_wo_gross = sum(costs_by_country$geo_adds_wo_gross),
geo_adds_w_gross = sum(costs_by_country$geo_adds_w_gross))
View(costs_by_country_adj)
20.3/36.4
100.8 / 100
0.50 / 0.5069023
53367806127 * 0.9863834
53367806127 * 2 * 0.9863834
53367806127 * (0.50 / 0.5069023) * 2
setwd("/project/class/bii_sdad_dspg/uva_2021/dspg21oss/")
top_repos <- read_csv("github_repos_157k.csv")  %>%
arrange(-stars)
top_100 <- top_repos %>%
select(slug, stars, commits, forks, watchers) %>%
rename(commits_ever = commits, stars_ever = stars,
forks_ever = forks, watchers_ever = watchers) %>%
slice(1:100) %>%
left_join(repos_by_year, by = "slug") %>%
rename(commits_2019 = commits, additions_2019 = additions, deletions_2019 = deletions) %>%
arrange(-adds_w_gross) %>%
select(slug, adds_w_gross, commits_2019, ends_with("_ever"), everything())
library("tidyorgs")
data("github_users")
?detect_orgs
github_users %>%
detect_orgs(login, company, organization, academic, email)
library("tidyverse")
chk <- github_users %>%
detect_orgs(login, company, organization, academic, email)
