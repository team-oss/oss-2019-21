location = na_if(location, "missing"))
github_users %>%
detect_orgs(login, company, organization, academic, email,
country = TRUE, parent_org = TRUE, org_type = TRUE) %>%
unite("location", c("location", "country"), sep = " ") %>%
mutate(location = str_replace_all(location, "NA", ""),
location = trimws(location))
github_users %>%
detect_orgs(login, company, organization, academic, email,
country = TRUE, parent_org = TRUE, org_type = TRUE) %>%
unite("geographic", c("location", "country"), sep = " ") %>%
mutate(geographic = str_replace_all(geographic, "NA", ""),
geographic = trimws(geographic))
github_users %>%
detect_orgs(login, company, organization, academic, email,
country = TRUE, parent_org = TRUE, org_type = TRUE) %>%
unite("geographic", c("location", "country"), sep = " ", remove = FALSE) %>%
mutate(geographic = str_replace_all(geographic, "NA", ""),
geographic = trimws(geographic))
github_users %>%
detect_orgs(login, company, organization, academic, email,
country = TRUE, parent_org = TRUE, org_type = TRUE) %>%
unite("location", c("location", "country"), sep = " ") %>%
mutate(location = str_replace_all(location, "NA", ""),
location = trimws(location)) %>%
detect_geographies(login, location, "country", email)
chk <- github_users %>%
detect_orgs(login, company, organization, academic, email,
country = TRUE, parent_org = TRUE, org_type = TRUE) %>%
unite("location", c("location", "country"), sep = " ") %>%
mutate(location = str_replace_all(location, "NA", ""),
location = trimws(location)) %>%
detect_geographies(login, location, "country", email)
View(chk)
View(chk)
chk <- github_users %>%
detect_orgs(login, company, organization, academic, email,
country = TRUE, parent_org = TRUE, org_type = TRUE)
View(chk)
conn <- dbConnect(drv = PostgreSQL(),
dbname = "sdad",
host = "10.250.124.195",
port = 5432,
user = Sys.getenv("db_userid"),
password = Sys.getenv("db_pwd"))
github_users <- dbGetQuery(conn, "SELECT login, company, location, email FROM gh.ctrs_clean_0821 limit 1000")
dbDisconnect(conn)
chk <- github_users %>%
detect_orgs(login, company, organization, academic, email,
country = TRUE, parent_org = TRUE, org_type = TRUE) %>%
unite("location", c("location", "country"), sep = " ") %>%
mutate(location = str_replace_all(location, "NA", ""),
location = trimws(location)) %>%
detect_geographies(login, location, "country", email)
View(chk)
library(dplyr)
academic_institutions <- readr::read_csv("data-raw/academic_institutions.csv")
#readr::write_rds(academic_institutions, "R/academic_institutions.rds")
usethis::use_data(academic_institutions, overwrite = TRUE)
usethis::use_data(academic_institutions, internal = TRUE, overwrite = TRUE)
devtools::install_github("brandonleekramer/tidyorgs")
devtools::install_github("brandonleekramer/diverstidy")
rm(list = ls())
library(tidyverse)
library(tidyorgs)
library(diverstidy)
library(RPostgreSQL)
conn <- dbConnect(drv = PostgreSQL(),
dbname = "sdad",
host = "10.250.124.195",
port = 5432,
user = Sys.getenv("db_userid"),
password = Sys.getenv("db_pwd"))
github_users <- dbGetQuery(conn, "SELECT login, company, location, email FROM gh.ctrs_clean_0821 limit 1000")
dbDisconnect(conn)
classified_users <- github_users %>%
detect_orgs(login, company, organization, academic, email,
country = TRUE, parent_org = TRUE, org_type = TRUE) %>%
unite("location", c("location", "country"), sep = " ") %>%
mutate(location = str_replace_all(location, "NA", ""),
location = trimws(location)) %>%
detect_geographies(login, location, "country", email)
View(classified_users)
start = Sys.time()
end = Sys.time()
full_time = end - start
full_time
conn <- dbConnect(drv = PostgreSQL(),
dbname = "sdad",
host = "10.250.124.195",
port = 5432,
user = Sys.getenv("db_userid"),
password = Sys.getenv("db_pwd"))
github_users <- dbGetQuery(conn, "SELECT login, company, location, email FROM gh.ctrs_clean_0821")
dbDisconnect(conn)
start_time = Sys.time()
classified_users <- github_users %>%
detect_orgs(login, company, organization, academic, email,
country = TRUE, parent_org = TRUE, org_type = TRUE) %>%
unite("location", c("location", "country"), sep = " ") %>%
mutate(location = str_replace_all(location, "NA", ""),
location = trimws(location)) %>%
detect_geographies(login, location, "country", email)
end_time = Sys.time()
time_to_classify = end - start
time_to_classify
View(classified_users)
time_to_classify = end_time - start_time
time_to_classify = end_time - start_time; time_to_classify
saveRDS(classified_users, "~/git/oss-2020/data/sectored_100821.rds")
country_users <- classified_users %>%
drop_na(country)
View(country_users)
academic_users <- classified_users %>%
filter(academic == 1)
View(academic_users)
academic_users <- classified_users %>%
filter(academic == 1) %>%
group_by(organization) %>%
count() %>%
arrange(-n)
academic_users <- classified_users %>%
filter(academic == 1) %>%
unnest_legacy(organization, "\\|")
academic_users <- classified_users %>%
filter(academic == 1) %>%
tidyr::unnest_legacy(country = strsplit(country, "\\|"))
academic_users <- classified_users %>%
filter(academic == 1) %>%
tidyr::unnest_legacy(country = strsplit(country, "\\|")) %>%
group_by(organization) %>%
count() %>%
arrange(-n)
academic_users <- classified_users %>%
filter(academic == 1) %>%
tidyr::unnest_legacy(organization = strsplit(organization, "\\|")) %>%
count(organization) %>%
arrange(-n)
academic_users <- classified_users %>%
filter(academic == 1) %>%
tidyr::unnest_legacy(organization = strsplit(organization, "\\|")) %>%
group_by(organization) %>%
count() %>%
arrange(-n)
View(academic_users)
nonacademic_users <- classified_users %>%
filter(academic != 1)
View(nonacademic_users)
academic_users <- classified_users %>%
filter(academic == 1)
academic_counts <- classified_users %>%
filter(academic == 1) %>%
tidyr::unnest_legacy(organization = strsplit(organization, "\\|")) %>%
group_by(organization) %>%
count() %>%
arrange(-n)
nonacademic_users <- classified_users %>%
filter(academic != 1)
nonacademic_users <- github_users %>%
filter(academic != 1) %>%
select(-organization, -academic, -parent_org, -org_type) %>%
unite("company", c("company", "location"), sep = " ") %>%
mutate(company = str_replace_all(company, "NA", ""),
company = trimws(company)) %>%
detect_orgs(login, company, organization, academic, email,
country = TRUE, parent_org = TRUE, org_type = TRUE)
nonacademic_users <- classified_users %>%
filter(academic != 1) %>%
select(-organization, -academic, -parent_org, -org_type) %>%
unite("company", c("company", "location"), sep = " ") %>%
mutate(company = str_replace_all(company, "NA", ""),
company = trimws(company)) %>%
detect_orgs(login, company, organization, academic, email,
country = TRUE, parent_org = TRUE, org_type = TRUE)
nonacademic_users <- classified_users %>%
filter(academic != 1) %>%
select(-organization, -academic, -parent_org, -org_type) %>%
unite("company", c("company", "location"), sep = " ") %>%
mutate(company = str_replace_all(company, "NA", ""),
company = trimws(company))
View(nonacademic_users)
View(nonacademic_users)
nonacademic_users <- classified_users %>%
filter(academic != 1 & !is.na() & grepl("university", location))
nonacademic_users <- classified_users %>%
filter(academic != 1 & !is.na(location) & grepl("university", location))
nonacademic_users <- classified_users %>%
mutate(location = tolower(location)) %>%
filter(academic != 1 & !is.na(location) & grepl("university", location))
sector_terms <- tidyorgs::sector_terms
sector_terms
na.omit(sector_terms$terms)
na.omit(paste0(sector_terms$terms, collapse = "|"))
nonacademic_users <- classified_users %>%
mutate(location = tolower(location)) %>%
filter(academic != 1 & !is.na(location)
& grepl(na.omit(paste0(sector_terms$terms, collapse = "|")), location))
nonacademic_users <- classified_users %>%
mutate(location = tolower(location)) %>%
filter(academic != 1 & !is.na(location)
& grepl(na.omit(paste0(sector_terms$terms, collapse = "|")), location)) %>%
select(login, company, country)
nonacademic_users <- classified_users %>%
mutate(location = tolower(location)) %>%
filter(academic != 1 & !is.na(location)
& grepl(na.omit(paste0(sector_terms$terms, collapse = "|")), location)) %>%
select(login, location, country) %>%
rename(company = location)
# some people put company info in the wrong column
sector_terms <- tidyorgs::sector_terms
sector_terms <- tidyorgs::sector_terms
company_wrong_col <- classified_users %>%
mutate(location = tolower(location)) %>%
filter(academic != 1 & !is.na(location)
& grepl(na.omit(paste0(sector_terms$terms, collapse = "|")), location)) %>%
select(login, location, country) %>%
rename(company = location) %>%
detect_orgs(login, company, organization, academic,
country = TRUE, parent_org = TRUE, org_type = TRUE)
View(company_wrong_col)
sector_terms <- tidyorgs::sector_terms
sector_terms <- na.omit(paste0(sector_terms$terms, collapse = "|"))
sector_terms
sector_terms <- tidyorgs::sector_terms
sector_terms <- na.omit(paste0(sector_terms$terms, collapse = "|"))
company_wrong_col <- classified_users %>%
mutate(location = tolower(location)) %>%
filter(academic != 1 & !is.na(location) & grepl(sector_terms), location) %>%
select(login, location, country) %>%
rename(company = location) %>%
detect_orgs(login, company, organization, academic,
country = TRUE, parent_org = TRUE, org_type = TRUE)
sector_terms <- tidyorgs::sector_terms
sector_terms <- na.omit(paste0(sector_terms$terms, collapse = "|"))
company_wrong_col <- classified_users %>%
mutate(location = tolower(location)) %>%
filter(academic != 1 & !is.na(location) & grepl(sector_terms, location)) %>%
select(login, location, country) %>%
rename(company = location) %>%
detect_orgs(login, company, organization, academic,
country = TRUE, parent_org = TRUE, org_type = TRUE)
View(company_wrong_col)
company_wrong_col <- classified_users %>%
mutate(location = tolower(location)) %>%
filter(academic != 1 & !is.na(location) & grepl(sector_terms, location))
company_wrong_col %>%
select(login, location, country) %>%
rename(company = location)
View(academic_counts)
View(academic_users)
company_wrong_col <- company_wrong_col %>%
select(login, location, country) %>%
rename(company = location)
try_this <- company_wrong_col %>%
rename(country_original = country) %>%
detect_orgs(login, company, organization, academic,
country = TRUE, parent_org = TRUE, org_type = TRUE)
View(try_this)
library(tidyorgs)
try_this <- company_wrong_col %>%
rename(country_original = country) %>%
detect_orgs(login, company, organization, academic,
country = TRUE, parent_org = TRUE, org_type = TRUE)
try_this <- company_wrong_col %>%
rename(country_original = country) %>%
detect_orgs(login, company, organization, academic, email,
country = TRUE, parent_org = TRUE, org_type = TRUE)
company_wrong_col <- classified_users %>%
mutate(location = tolower(location)) %>%
filter(academic != 1 & !is.na(location) & grepl(sector_terms, location)) %>%
select(login, location, email, country) %>%
rename(company = location) %>%
rename(country_original = country) %>%
detect_orgs(login, company, organization, academic, email,
country = TRUE, parent_org = TRUE, org_type = TRUE)
View(company_wrong_col)
View(academic_users)
new_df <- classified_users %>%
mutate(company = str_replace_all(company, "Misc. Academic\\|\\|Misc. Academic", ""))
View(new_df)
new_df <- company_wrong_col %>%
mutate(company = str_replace_all(company, "Misc. Academic\\|\\|Misc. Academic", ""))
new_df <- company_wrong_col %>%
mutate(company = str_replace_all(company, "Misc. Academic\\|", ""))
new_df <- company_wrong_col %>%
mutate(organization = str_replace_all(organization, "Misc. Academic\\|", ""))
new_df <- company_wrong_col %>%
mutate(organization = str_replace_all(organization, "Misc. Academic\\|\\|Misc. Academic", ""))
new_df <- company_wrong_col %>%
mutate(organization = str_replace_all(organization, "Misc\\. Academic\\|\\|Misc\\. Academic", ""))
new_df <- company_wrong_col %>%
mutate(organization = str_replace_all(organization, "Misc\\. Academic\\|", "")
)
new_df <- company_wrong_col %>%
mutate(organization = str_replace_all(organization, "Misc\\. Academic\\|", ""),
organization = str_replace_all(organization, "Misc\\. Academic", "")
)
new_df <- company_wrong_col %>%
mutate(organization = str_replace_all(organization, "Misc\\. Academic\\|", ""),
organization = str_replace_all(organization, "\\|Misc\\. Academic", "")
)
new_df <- company_wrong_col %>%
filter(!grepl("university(?! city| park| place)|(?<!state )college(?! park| station)", organization)) %>%
mutate(organization = str_replace_all(organization, "Misc\\. Academic\\|", ""),
organization = str_replace_all(organization, "\\|Misc\\. Academic", "")
) %>%
filter(!(login %in% company_wrong_col)) %>%
bind_rows(company_wrong_col)
new_df <- company_wrong_col %>%
filter(!grepl("university(?! city| park| place)|(?<!state )college(?! park| station)", organization))
new_df <- company_wrong_col %>%
filter(!grepl("university(?! city| park| place)", organization))
new_df <- company_wrong_col %>%
filter(!grepl("something", organization))
new_df <- company_wrong_col %>%
filter(!grepl("(university(?! city| park| place)|(?<!state )college(?! park| station))", organization))
new_df <- company_wrong_col %>%
filter(!grepl("(?<!state )college(?! park| station)", organization))
new_df <- company_wrong_col %>%
filter(!grepl("college(?! park| station)", organization))
new_df <- company_wrong_col %>%
filter(!grepl("college park", organization))
new_df <- company_wrong_col %>%
filter(!grepl("university city|university park|university place)|state college|college park|college station", organization)) %>%
mutate(organization = str_replace_all(organization, "Misc\\. Academic\\|", ""),
organization = str_replace_all(organization, "\\|Misc\\. Academic", "")
) %>%
filter(!(login %in% company_wrong_col)) %>%
bind_rows(company_wrong_col)
new_df <- company_wrong_col %>%
filter(!grepl("university city|university park|university place)|state college|college park|college station", organization)) %>%
mutate(organization = str_replace_all(organization, "Misc\\. Academic\\|", ""),
organization = str_replace_all(organization, "\\|Misc\\. Academic", "")
)
View(new_df)
new_df <- company_wrong_col %>%
filter(!grepl("university city|university park|university place|state college|college park|college station", organization)) %>%
mutate(organization = str_replace_all(organization, "Misc\\. Academic\\|", ""),
organization = str_replace_all(organization, "\\|Misc\\. Academic", "")
)
new_df <- company_wrong_col %>%
filter(!grepl("university city|university park|university place|state college,|college park|college station", organization)) %>%
mutate(organization = str_replace_all(organization, "Misc\\. Academic\\|", ""),
organization = str_replace_all(organization, "\\|Misc\\. Academic", "")
)
new_df <- company_wrong_col %>%
filter(!grepl("university city", organization))
new_df <- company_wrong_col %>%
filter(grepl("university city", organization))
new_df <- company_wrong_col %>%
filter(grepl("university", organization))
new_df <- company_wrong_col %>%
filter(!grepl("university city|university park|university place|state college,|college park|college station", location)) %>%
mutate(organization = str_replace_all(organization, "Misc\\. Academic\\|", ""),
organization = str_replace_all(organization, "\\|Misc\\. Academic", "")
)
View(classified_users)
with_some_info <- classified_users %>%
filter(!is.na(location) & !is.na(company) & !is.na(email))
View(with_some_info)
with_some_info <- classified_users %>%
filter(!is.na(location) | !is.na(company) | !is.na(email))
conn <- dbConnect(drv = PostgreSQL(),
dbname = "sdad",
host = "10.250.124.195",
port = 5432,
user = Sys.getenv("db_userid"),
password = Sys.getenv("db_pwd"))
github_users <- dbGetQuery(conn, "SELECT login, company, location, email FROM gh.ctrs_clean_0821 LIMIT 100")
dbDisconnect(conn)
start_time = Sys.time()
classified_by_orgs <- github_users %>%
detect_orgs(login, company, organization, academic, email,
country = TRUE, parent_org = TRUE, org_type = TRUE) %>%
rename(ac_country = country) %>%
detect_geographies(login, location, "country", email)
end_time = Sys.time()
time_to_classify = end_time - start_time; time_to_classify
View(classified_by_orgs)
rm(list = ls())
library(tidyverse)
library(tidyorgs)
library(diverstidy)
library(RPostgreSQL)
conn <- dbConnect(drv = PostgreSQL(),
dbname = "sdad",
host = "10.250.124.195",
port = 5432,
user = Sys.getenv("db_userid"),
password = Sys.getenv("db_pwd"))
github_users <- dbGetQuery(conn, "SELECT login, company, location, email FROM gh.ctrs_clean_0821")
dbDisconnect(conn)
start_time = Sys.time()
classified_by_orgs <- github_users %>%
detect_orgs(login, company, organization, academic, email,
country = TRUE, parent_org = TRUE, org_type = TRUE) %>%
rename(ac_country = country) %>%
detect_geographies(login, location, "country", email)
end_time = Sys.time()
time_to_classify = end_time - start_time; time_to_classify
View(classified_by_orgs)
with_some_info <- classified_users %>%
filter(!is.na(location) | !is.na(company) | !is.na(email))
with_some_info <- classified_by_orgs %>%
filter(!is.na(location) | !is.na(company) | !is.na(email))
View(with_some_info)
with_country_data <- classified_by_orgs %>%
filter(!is.na(country) | !is.na(ac_country))
View(with_country_data)
with_country_data <- classified_by_orgs %>%
filter(!is.na(country) | !is.na(ac_country)) %>%
mutate(matched = if_else(country = ac_country, TRUE, FALSE))
with_country_data <- classified_by_orgs %>%
filter(!is.na(country) | !is.na(ac_country)) %>%
mutate(matched = if_else(country == ac_country, TRUE, FALSE))
with_country_data <- classified_by_orgs %>%
filter(!is.na(country) | !is.na(ac_country)) %>%
mutate(matched = if_else(is.na(), TRUE, FALSE)) %>%
dt_mutate(new_country = ifelse(test = str_detect(string = country, pattern = NA), no = ac_country))
with_country_data <- classified_by_orgs %>%
filter(!is.na(country) | !is.na(ac_country)) %>%
mutate(matched = if_else(is.na(), TRUE, FALSE)) %>%
mutate(new_country = ifelse(test = str_detect(string = country, pattern = NA), no = ac_country))
with_country_data <- classified_by_orgs %>%
filter(!is.na(country) | !is.na(ac_country)) %>%
mutate(new_country = ifelse(test = str_detect(string = country, pattern = NA), no = ac_country))
with_country_data <- classified_by_orgs %>%
filter(!is.na(country) | !is.na(ac_country)) %>%
mutate(new_country = ifelse(str_detect(country, pattern = "Something"), no = ac_country))
with_country_data <- classified_by_orgs %>%
filter(!is.na(country) | !is.na(ac_country)) %>%
mutate(new_country = ifelse(str_detect(country, pattern = is.na(country)), no = ac_country))
with_country_data <- classified_by_orgs %>%
filter(!is.na(country) | !is.na(ac_country)) %>%
replace_with_na_all(country = ~.x == "missing")
with_country_data <- classified_by_orgs %>%
filter(!is.na(country) | !is.na(ac_country)) %>%
naniar::replace_with_na_all(country = ~.x == "missing")
with_country_data <- classified_by_orgs %>%
filter(!is.na(country) | !is.na(ac_country)) %>%
naniar::replace_with_na(replace = list(country = -99))
with_country_data <- classified_by_orgs %>%
filter(!is.na(country) | !is.na(ac_country)) %>%
naniar::replace_with_na(replace = list(country = -99))
with_country_data <- classified_by_orgs %>%
filter(!is.na(country) | !is.na(ac_country)) %>%
mutate(new_country = if_else(is.na(country), ac_country, country))
with_country_data <- classified_by_orgs %>%
filter(!is.na(country) | !is.na(ac_country))
View(with_country_data)
with_country_data %>%
dplyr::mutate(sector = replace_na(org_type, 0))
data(github_users)
email_to_orgs_df <- github_users %>%
email_to_orgs(login, email, organization, academic)
View(email_to_orgs_df)
load_all()
data(github_users)
devtools::install_github("brandonleekramer/diverstidy")
devtools::install_github("brandonleekramer/tidyorgs")
rm(list = ls())
library(tidyverse)
library(tidyorgs)
library(diverstidy)
library(RPostgreSQL)
rm(list = ls())
library(tidyverse)
library(tidyorgs)
library(diverstidy)
library(RPostgreSQL)
conn <- dbConnect(drv = PostgreSQL(),
dbname = "sdad",
host = "10.250.124.195",
port = 5432,
user = Sys.getenv("db_userid"),
password = Sys.getenv("db_pwd"))
github_users <- dbGetQuery(conn, "SELECT login, company, location, email FROM gh.ctrs_clean_0821")
dbDisconnect(conn)
start_time = Sys.time()
classified_by_orgs <- github_users %>%
detect_orgs(login, company, organization, academic, email,
country = TRUE, parent_org = TRUE, org_type = TRUE) %>%
rename(ac_country = country) %>%
detect_geographies(login, location, "country", email)
end_time = Sys.time()
time_to_classify = end_time - start_time; time_to_classify
# took just over an hour with 3.2m users
saveRDS(classified_users, "~/git/oss-2020/data/sectored_100821.rds")
rm(list = ls())
library(tidyverse)
library(tidyorgs)
library(diverstidy)
library(RPostgreSQL)
conn <- dbConnect(drv = PostgreSQL(),
dbname = "sdad",
host = "10.250.124.195",
port = 5432,
user = Sys.getenv("db_userid"),
password = Sys.getenv("db_pwd"))
github_users <- dbGetQuery(conn, "SELECT login, company, location, email FROM gh.ctrs_clean_0821")
dbDisconnect(conn)
saveRDS(github_users, "~/git/oss-2020/data/github_ctrs_clean_0821.rds")
devtools::install_github("brandonleekramer/diverstidy")
devtools::install_github("brandonleekramer/diverstidy", force = TRUE)
library(tidyverse)
library(tidyorgs)
library(diverstidy)
library(RPostgreSQL)
data("github_users")
github_users
github_users %>%
detect_geographies(login, location, "country", email)
